// Generated by CoffeeScript 1.7.1
(function() {
  var Buffer, ChatBuffer,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Buffer = require('./buffer');

  ChatBuffer = (function(_super) {
    __extends(ChatBuffer, _super);

    function ChatBuffer(connection, info) {
      ChatBuffer.__super__.constructor.call(this, connection, info);
      this.isArchived = !!info.archived;
    }

    ChatBuffer.prototype.archive = function(callback) {
      if (this.isArchived) {
        return callback();
      }
      return this.connection.engine.db.setBufferArchived(this.connection.id, this.id, true, (function(_this) {
        return function() {
          _this.isArchived = true;
          return _this.connection.user.broadcast({
            type: 'buffer_archived',
            cid: _this.connection.id,
            bid: _this.id
          }, callback);
        };
      })(this));
    };

    ChatBuffer.prototype.unarchive = function(callback) {
      if (!this.isArchived) {
        return callback();
      }
      return this.connection.engine.db.setBufferArchived(this.connection.id, this.id, false, (function(_this) {
        return function() {
          _this.isArchived = false;
          return _this.connection.user.broadcast({
            type: 'buffer_unarchived',
            cid: _this.connection.id,
            bid: _this.id
          }, callback);
        };
      })(this));
    };

    ChatBuffer.prototype["delete"] = function(callback) {
      if (this.isJoined) {
        return callback();
      }
      return this.connection.engine.db.deleteBuffer(this.connection.id, this.id, (function(_this) {
        return function() {
          return _this.connection.removeBuffer(_this, callback);
        };
      })(this));
    };

    return ChatBuffer;

  })(Buffer);

  module.exports = ChatBuffer;

}).call(this);

//# sourceMappingURL=chat_buffer.map
